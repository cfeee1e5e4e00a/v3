version: "3"

services:
  db:
    image: "postgres:16.2-alpine3.19"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=nti
      - POSTGRES_PASSWORD=nti
      - POSTGRES_DB=nti
      - PGDATA=/data/postgres
    ports:
      - "5432:5432"
    volumes:
      - "postgres_data:/data/postgres"
      - "./.config/postgres/initdb.d:/docker-entrypoint-initdb.d"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U nti -d nti'"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build: backend
    restart: "on-failure"
    depends_on:
      db:
        condition: service_healthy
      mqtt:
        condition: service_started
      influxdb:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      - APP_LOG_LEVEL=DEBUG
      - PG_URI=postgresql+asyncpg://nti:nti@db:5432/nti
      - AUTH_SECRET_KEY=932b25ed0d90729416ba383e384567a356b2870f302fb5d04b89dc364f4ccfd6
      - AUTH_ALGORITHM=HS256
      - MQTT_HOST=mqtt
      - MQTT_CLIENT=py_back
      - MQTT_USERNAME=nti
      - MQTT_PASSWORD=nti
      - INFLUX_URL=http://influx.cfeee1e5e4e00a.ru:8086/
      - INFLUX_TOKEN=oGxyaChur5XTvoGRBE3FKJMtGSFxQ--GEZtUqmDhr18cMNDcBEMAQNPgtGimgUvvZMyrGrv58IXUj0D-eDO1ZQ==
      - INFLUX_ORG=cfeee1e5e4e00a

  mqtt:
    image: "emqx/nanomq:0.21.6"
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - "./.config/nanomq/nanomq.conf:/etc/nanomq.conf"
      - "./.config/nanomq/nanomq_pwd.conf:/etc/nanomq_pwd.conf"

  grafana:
    image: "grafana/grafana-oss:10.0.12"
    restart: unless-stopped
    environment:
      - GF_INSTALL_PLUGINS=grafana-image-renderer
    ports:
      - "3000:3000"
    depends_on:
      influxdb:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - "grafana_data:/var/lib/grafana"
      - "./.config/grafana/grafana.ini:/etc/grafana/grafana.ini"
      - "./.config/grafana-provisioning/:/etc/grafana/provisioning"

  influxdb:
    image: "influxdb:2.7.5-alpine"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=nti
      - DOCKER_INFLUXDB_INIT_PASSWORD=cfeee1e5e4e00a
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=oGxyaChur5XTvoGRBE3FKJMtGSFxQ--GEZtUqmDhr18cMNDcBEMAQNPgtGimgUvvZMyrGrv58IXUj0D-eDO1ZQ==
      - DOCKER_INFLUXDB_INIT_ORG=cfeee1e5e4e00a
      - DOCKER_INFLUXDB_INIT_BUCKET=default
    ports:
      - "8086:8086"
    volumes:
      - "influxdb_data:/var/lib/influxdb2"

  telegraf:
    image: "telegraf:1.29.5"
    depends_on:
      - "influxdb"
      - "mqtt"
    volumes:
      - "./.config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf"

  # web-proxy:

  # frontend:

# networks:

volumes:
  influxdb_data:
  grafana_data:
  postgres_data:
